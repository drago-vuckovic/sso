spring:
  application:
    name: spring-boot-app

  datasource:
    url: jdbc:postgresql://postgres:5432/keycloak
    username: keycloak
    password: keycloak
    driver-class-name: org.postgresql.Driver

  security:
    oauth2:
      resourceserver:
        jwt:
          # Use the Docker service name "keycloak" so the app container can reach it:
#          issuer-uri: http://keycloak:8080/realms/demo
          # alternatively, you can point directly at the JWKs endpoint:
           jwk-set-uri: http://keycloak:8080/realms/demo/protocol/openid-connect/certs
#          issuer-uri: http://keycloak:8080/realms/demo

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    display-request-duration: true
    tags-sorter: alpha
  enable-hateoas: false
  enable-data-rest: false

server:
  port: 8081

keycloak:
  server-url:      http://keycloak:8080
  realm:           demo
  admin-client-id: admin-client
  admin-client-secret: admin-secret
  admin-user: admin            # the master-realm admin user
  admin-password: admin
  master-realm: master         # realm where admin-cli lives
  master-client-id: admin-cli  # built-in client for master realm

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationFilter: TRACE
    org.springframework.security.oauth2.jwt: DEBUG

